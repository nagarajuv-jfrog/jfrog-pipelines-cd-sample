template: true   # required for local templates
valuesFilePath: ./values.yml

resources:
  - name: app_repo_sample
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.gitIntegration }}                      
      path: {{ .Values.gitRepositoryPath }}    
      branches:
        include: master

  - name: app_buildinfo_sample
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.artifactoryIntegration }}

  - name: app_promoted_buildinfo_sample
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.artifactoryIntegration }}
      
  - name: gosvc_promoted_build_info_sample
    type: BuildInfo
    configuration:
      # sourceArtifactory: demoArt
      sourceArtifactory: {{ .Values.artifactoryIntegration }}
      buildName: svc_build
      buildNumber: 1      
      
  - name: release_bundle_sample
    type: ReleaseBundle
    configuration:
      #sourceDistribution: myDist
      sourceDistribution:  {{ .Values.distributionIntegration }}
      name: demo_rb
      version: v2.0.0

  - name: signed_bundle_sample
    type: ReleaseBundle
    configuration:
      #sourceDistribution: myDist
      sourceDistribution:  {{ .Values.distributionIntegration }}
      name: demo_rb
      version: v2.0.0

  - name: distribution_rules_sample
    type: DistributionRule
    configuration:
      #sourceDistribution: myDist
      sourceDistribution:  {{ .Values.distributionIntegration }}
      #serviceName: "*"
      siteName: "pipelinesedge"
      cityName: "*"
      countryCodes:
        - "*"     

pipelines:
  - name: app_dev_pipeline_su204_sample
    steps:
      - name: app_build
        type: DockerBuild
        execution:
          onStart:
            - set_run_name "1.0.1"        
        configuration:
          affinityGroup: docker_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: {{ .Values.artifactoryUrl }}/{{ .Values.sourceRepository }}/{{ .Values.imageName }}  
          dockerImageTag: ${run_number}
          inputResources:
            - name: app_repo
          integrations:
            - name: {{ .Values.artifactoryIntegration }}         
            
      - name: app_push
        type: DockerPush
        configuration:
          affinityGroup: docker_group
          targetRepository: {{ .Values.sourceRepository }}
          integrations:
            - name: {{ .Values.artifactoryIntegration }}                            
          inputSteps:
            - name: app_build

      - name: publish_app_build
        type: PublishBuildInfo
        configuration:
          affinityGroup: docker_group
          inputSteps:
            - name: app_push
          outputResources:
            - name: app_buildinfo
            
      - name: xrayScanStep
        type: XrayScan
        configuration:
          inputResources:
            - name: app_buildinfo   

  - name: app_prod_pipeline_su204_sample
    steps:
      - name: app_promote_build
        type: PromoteBuild
        configuration:
          #failOnValidate: true
          #copy: true
          targetRepository: {{ .Values.prodRepository }}
          comment: "promoted via pipeline ${pipeline_name} in run number ${run_number}"
          inputResources:
            - name: app_buildinfo
              trigger: true
          outputResources:
            - name: app_promoted_buildinfo

      #- name: app_deploy
      #  type: Bash
      #  configuration:
      #    integrations:
      #      - name: {{ .Values.artifactoryIntegration }}
      #    inputResources:
      #      - name: app_promoted_buildinfo
      #  execution:
      #    onStart:
      #      - jfrog rt docker-pull {{ .Values.artifactoryUrl }}/{{ .Values.prodRepository }}/{{ .Values.imageName }}:$res_app_promoted_buildinfo_buildNumber {{ .Values.prodRepository }}
      #      #- jfrog rt dl prod-go-local/app
      #      #- ls -latr
      #    onExecute:
      #      - docker run {{ .Values.artifactoryUrl }}/{{ .Values.prodRepository }}/{{ .Values.imageName }}:$res_app_promoted_buildinfo_buildNumber
 
 
 
  - name: cd_release_mgmt_su204_sample
    steps:
      - name: bundle
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: demo_rb
          releaseBundleVersion: v1.0.${run_number}
          dryRun: false
          sign: false
          description: "some random test description"
          inputResources:
            # - name: gosvc_promoted_build_info
            - name: app_promoted_buildinfo
              trigger: true
          outputResources:
            - name: release_bundle
          releaseNotes:
            syntax: markdown
            content: |
              ## Heading
                * Bullet
                * Points

      - name: sign
        type: SignReleaseBundle
        configuration:
          inputResources:
            - name: release_bundle
          outputResources:
            - name: signed_bundle

      - name: distribute
        type: DistributeReleaseBundle
        configuration:
          dryRun: false
          # dryRun: true
          inputResources:
            - name: signed_bundle
            - name: distribution_rules 
